#%RAML 1.0 Library
(id): http://raml.org/core.extensions
annotationTypes:
  disabledWhen: RAMLLocalExpression
  visibleWhen: RAMLLocalExpression
  requiredWhen: RAMLLocalExpression
  typeahead: RAMLLocalExpression
  requiredWhenMessage: string
  enumDescriptions: string[]
  collectionFormat:
    enum: [ csv, multi]
  enumValues: RAMLLocalExpression
  representation: string | any
  primary: nil| boolean
  htmlLabel: boolean
  immutable: nil | boolean
  equalTo: string
  ordering: OrderingMappings
  foreignProperties:
    properties:
      //: string
  NilInstance: any
  detailsTemplate: string
  views:
    properties:
      //: ViewDescription
  usesApis:
    properties:
      //: string
  labelDecorators:
    properties:
      //: DecoratorDescription
  groupBy:
    properties:
        property?: string
        allowUserConfiguration?: boolean
        allowedGropings?: string[]
  parametersLayout:
    properties:
       initiallyVisible?: string[]
       allowConfiguration?: boolean
       contributeToContextMenu?: boolean

  filter: FilterMapping |  nil
  create: RAMLTypeName| nil
  details: RAMLTypeName| nil
  update: RAMLTypeName| nil
  list: RAMLTypeName | nil
  memberCollection: RAMLTypeName| nil
  label: RAMLLocalExpression
  key: boolean
  computeFunction: RAMLLocalExpression
  computedProperties:
    properties:
       //: computePropertyType
  actions:
    properties:
      //: Action
  readonly: boolean
  reference: boolean | RAMLReferenceExpression
  sortDirection: boolean
  conversionRules:
    properties:
      //:
        properties:
          from: string
          to: string
          selfRule?: string
          autoConvertKnownProperties?:
            type: boolean
            default: true
          asssertions?:
            properties:
              //: string
  columns:
    type: array
    items: string
  errorMessage: string
  instanceValidator: string
  basicPaging:
    properties:
       total?: RAMLResponseExpression
       page?: RAMLRequestExpression
       results?: RAMLResponseExpression
       offset?: RAMLLocalExpression
  preTransform: any
  errorMessageIn: RAMLResponseExpression
  icon: url
  id: string
  unique: boolean
  propOrder:
    type: string[]
types:

  Conditional:
    properties:
      disabledWhen?: RAMLLocalExpression
      visibleWhen?: RAMLLocalExpression
      requiredWhen?: RAMLLocalExpression
  DecoratorDescription:
    properties:
      when?: RAMLLocalExpression
      title?: string
      summary?: string
      details?: string
      status?: string
      action? : string

      itemTransform?: DecoratorDescription
      replace?: boolean
      align?:
        enum: [ left, right ]
      class?: string
      background?: string
      image?: string
  Action:
    type: Conditional
    properties:
      parameters?:
        properties:
          //: RAMLTypeName
      result?: RAMLTypeName
      body: string
  computePropertyType: any
  RAMLLocalExpression: string
  RAMLResponseExpression: string
  RAMLRequestExpression: string
  RAMLReferenceExpression: string
  RAMLTypeName: string
  ViewDescription:
    properties:
       resource: string
       method?: string
       displayName?: string
       description?: string
       fixedParameters?:
         properties:
           //: any
  OrderingMapping:
    properties:
      property: string
      descending?: boolean
  OrderingMappings:
    properties:
      //: string | OrderingMapping
  FilterMapping:
    properties:
      property?: string
      valueMappings?:
            properties:
               //: string
      noFilterValue?: string
      filterOp?:
            default: eq
            enum: [ eq, lt, gt, like, ge, le ]
  url:
    type: string
    facets:
      kind?: string
  html: text
  code:
    type: text
    facets:
      language?: string
  htmlUrl:
    type: url
    kind: html
  link:
    type: url
    facets:
      endpoint: string
  imageUrl:
    type: url
    kind: image
  multiline:
    type: string
  text: multiline
  markdown:
      type: text
  relation:
    type: array
