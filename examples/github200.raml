#%RAML 1.0
title: Github
baseUri: https://api.github.com/
mediaType: application/json
uses:
  core: coreLib.raml
  ght: githubTypes.raml
types:
   Comment:
     type: ght.Comment
     (core.label): "${user.login} ${created_at} ${body}"
     (core.icon): user.avatar_url
     (core.htmlLabel): true
   Assignee:
     type: ght.User
   Issue:
     type: ght.Issue
     (core.actions):
        close:
          visibleWhen: $.state=='open'
          parameters:
          body: $.state='closed'
        reopen:
          visibleWhen: $.state=='closed'
          body: $.state='closed'
     (core.labelDecorators):
       opened:
         when: $.state=='open'
         details: "#${number} opened ${created_at} by ${user.login}"
       closed:
         when: $.state=='closed'
         details: "by ${user.login} closed at ${closed_at}"
       comments_count:
         when: $.comments
         status: comments
         align: right
         image: https://maxcdn.icons8.com/Color/PNG/24/Business/comments-24.png
       labels:
         title: labels
         itemTransform:
            title: name
            class: label
            background: "#${color}"
            replace: true
       milestone:
         details: milestone
         class: label
         background: "#0000AA"

resourceTypes:
  list:
    get:
      displayName: <<resourcePathName | !uppercamelcase>>
      (core.list):
      (core.basicPaging): { page: page}
      responses:
        200:
          body: <<ItemType>>[]
securitySchemes:
  basic:
    type: Basic Authentication
securedBy: basic
/repos/{owner}/{repo}:
  /labels:
    type:  { list: {ItemType : ght.Label} }
  /assignees:
    type:  { list: {ItemType : Assignee} }
  /milestones:
      type:  { list: {ItemType : ght.Milestone} }
  /issues:
    get:
      displayName: Issues
      (core.list):
      (core.errorMessageIn): message
      (core.basicPaging): { page: page}
      (core.representation): list
      (core.parametersLayout):
        initiallyVisible: [state, labels, milestone , sort]
        allowConfiguration: true
        contributeToContextMenu: true
      (core.groupBy):
        property: milestone
        allowUserConfiguration: true
      queryParameters:
        milestone:
          (core.reference): ght.Milestone.number
          (core.filter):
             property: milestone.number
        state:
            enum: [open, closed, all]
            default: open
            displayName: Issue State
            (core.filter):
               noFilterValue: all
        assignee:
           (core.reference): Assignee.login
           (core.filter):
              property: assignees.login
        creator:
           (core.reference): User.login
           (core.filter):
              property: user.login
        mentioned:
          (core.reference): User.login
          (core.filter):
        direction:
          (core.sortDirection): true
          enum: [asc,desc]
          default: desc
        labels:
          type: string[]
          uniqueItems: true
          (core.collectionFormat): csv
          (core.reference): ght.Label.name
          (core.filter):
             property: labels.name
        since:
           type: datetime
           (core.filter):
             property: updated_at
             op: ge
        sort:
          enum: [comments, created, updated]
          default: created
          displayName: Order by
          (core.ordering):
            created: created_at
            updated: updated_at
            comments: comments
        page: integer
      responses:
        200:
          body:
              type: Issue[]
    /{issueNum}:
      uriParameters:
        issueNum:
          type: integer
          (core.reference): ght.Issue.number
      /comments:
          (core.memberCollection): ght.Issue
          (core.visibleWhen): $.comments
          type:  { list: {ItemType : Comment } }
          (core.columns): [updated_at, body ]
          (core.representation): list-only
